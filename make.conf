#check native flags
#clang -march=native -E -v - </dev/null 2>&1|grep cc1
#gcc -march=native -E -v - </dev/null 2>&1|grep cc1

# supports multislotting clang
# and is needed to bootstrap clang major version updates
LLVM_VER="16"
LLVM_PATH="/usr/lib/llvm/$LLVM_VER/bin"

# compiler
CC="${LLVM_PATH}/clang"
CXX="${LLVM_PATH}/clang++"
#CXX="${LLVM_PATH}/clang++ -stdlib=libc++"
LD="${LLVM_PATH}/ld.lld"

# use LLVM-provided binutils
AR="${LLVM_PATH}/llvm-ar"
AS="${LLVM_PATH}/clang -c"
CPP="${LLVM_PATH}/clang-cpp"
NM="${LLVM_PATH}/llvm-nm"
STRIP="${LLVM_PATH}/llvm-strip"
RANLIB="${LLVM_PATH}/llvm-ranlib"
OBJCOPY="${LLVM_PATH}/llvm-objcopy"
STRINGS="${LLVM_PATH}/llvm-strings"
OBJDUMP="${LLVM_PATH}/llvm-objdump"
READELF="${LLVM_PATH}/llvm-readelf"
ADDR2LINE="${LLVM_PATH}/llvm-addr2line"

# cpu uarch
UARCH="znver1"

#>=sys-devel/gcc:10 fails with -flto=thin
#LTO=""             # None
#LTO="-flto=32"     # GCC
LTO="-flto=thin"    # LLVM

# this must be compatible with both clang and gcc
COMMON_FLAGS="-O2 -pipe -mtune=${UARCH} -march=${UARCH} -fno-omit-frame-pointer"
# COMMON_FLAGS="-O2 -pipe -mtune=${UARCH} -march=${UARCH} -D_FORTIFY_SOURCE=2 -fno-omit-frame-pointer"
# COMMON_FLAGS="-O2 -pipe -mtune=${UARCH} -march=${UARCH} -D_FORTIFY_SOURCE=3 -fno-omit-frame-pointer"

CFLAGS="${CFLAGS} ${COMMON_FLAGS} ${LTO}"
CXXFLAGS="${CXXFLAGS} ${COMMON_FLAGS} ${LTO}"
FCFLAGS="${FCFLAGS} ${COMMON_FLAGS} ${LTO}"
FFLAGS="${FFLAGS} ${COMMON_FLAGS} ${LTO}"
LDFLAGS="${LDFLAGS} ${COMMON_FLAGS} ${LTO} -Wl,--as-needed"

#RUSTFLAGS="-C target-cpu=native"

#replace GNU-libtool with slibtool
#LIBTOOL="rlibtool"
#MAKEFLAGS="LIBTOOL=${LIBTOOL}"
#MAKE="make LIBTOOL=${LIBTOOL}"
########################

USE="
X alsa threads opengl gmp caps icu cairo xml cjk inotify numa ipv6
wayland vulkan ffmpeg lcms egl gles2 vdpau vaapi
jpegxl -jpeg2k jpeg png webp tiff svg
bzip2 -brotli lzma lzo lz4 zlib zstd
xml cjk inotify numa openssl sqlite udev
gtk gstreamer introspection gnome-keyring cups dbus
pipewire pulseaudio policykit

unwind hardened

openmp -opencl -opencv -openal

-nls -doc -idn -gnutls -curl -tcpd -ftp -cpudetection
"

ACCEPT_KEYWORDS="~amd64"
ALSA_CARDS=""
CHOST="x86_64-pc-linux-gnu"
CPU_FLAGS_X86="aes avx avx2 f16c fma3 mmx mmxext pclmul popcnt sha sse sse2 sse3 sse4_1 sse4_2 sse4a ssse3 rdrand"
FFTOOLS=""
GRUB_PLATFORMS="efi-64"
INPUT_DEVICES="libinput"
L10N="en"
LC_MESSAGES="C"

QEMU_SOFTMMU_TARGETS="x86_64"
QEMU_USER_TARGETS="x86_64"

LLVM_TARGETS="AMDGPU BPF"
AMDGPU_TARGETS="gfx1010"

RUBY_TARGETS="ruby32"

PYTHON_SINGLE_TARGET="python3_11"
PYTHON_TARGETS="${PYTHON_SINGLE_TARGET}"

LUA_SINGLE_TARGET="lua5-4"
LUA_TARGETS="lua5-1 ${LUA_SINGLE_TARGET}"

VIDEO_CARDS="amdgpu radeonsi radeon"

EMERGE_DEFAULT_OPTS="--nospinner --ask --verbose"
#MAKEOPTS="-j1"
MAKEOPTS="-j65"
DISTDIR="/var/distfiles"
PKGDIR="/var/packages"
PORTAGE_NICENESS="19"
#PORTAGE_TMPDIR="/tmp"
#PORTAGE_LOGDIR="/tmp/portage-logs"

PORTAGE_TMPDIR="/tmp"
PORTAGE_TMPFS="/tmp"

FEATURES="cgroup protect-owned preserve-libs unmerge-orphans sfperms xattr"
FEATURES="${FEATURES} fixlafiles"
FEATURES="${FEATURES} unknown-features-warn"
FEATURES="${FEATURES} news nodoc noinfo"
FEATURES="${FEATURES} parallel-fetch parallel-install -ebuild-locks"

FEATURES="${FEATURES} strict strict-keepdir multilib-strict"
#FEATURES="${FEATURES} strict strict-keepdir multilib-strict stricter"

FEATURES="${FEATURES} fail-clean"
#FEATURES="${FEATURES} keepwork keeptemp noclean"

FEATURES="${FEATURES} userfetch userpriv usersync"
FEATURES="${FEATURES} sandbox usersandbox ipc-sandbox network-sandbox mount-sandbox pid-sandbox"
#FEATURES="${FEATURES} -sandbox -usersandbox"
#FEATURES="${FEATURES} -sandbox -usersandbox -ipc-sandbox -network-sandbox -mount-sandbox -pid-sandbox"

FEATURES="${FEATURES} qa-unresolved-soname-deps"
FEATURES="${FEATURES} unknown-features-warn"

# keep and install debug symbols
# Not using FEATURES=compressdebug, have ZFS file compression
# If FEATURES=nostrip splitdebug won't do anything, disable nostrip
#FEATURES="${FEATURES} splitdebug compressdebug -nostrip"
FEATURES="${FEATURES} splitdebug -nostrip"

COLLISION_IGNORE=""
CLEAN_DELAY="0"
EMERGE_WARNING_DELAY="0"
ACCEPT_LICENSE="-* @FREE"

BINPKG_COMPRESS="zstd"
BINPKG_COMPRESS_FLAGS="-4 --long=31"

# Disable compressing man pages, use ZFS file compression
PORTAGE_COMPRESS=""
PORTAGE_COMPRESS_FLAGS=""

CONFIG_PROTECT="
/etc
/etc/init.d
/etc/conf.d
/usr/share/gnupg/qualified.txt
"

CONFIG_PROTECT_MASK="
/etc/sandbox.d
/etc/fonts/fonts.conf
/etc/gentoo-release
/etc/terminfo
/etc/dconf
/etc/ca-certificates.conf
/etc/revdep-rebuild
/etc/libvirt/nwfilter
"

#GENTOO_MIRRORS=""
# mirrorselect -s3 -b10 -D
GENTOO_MIRRORS="
http://mirror.leaseweb.com/gentoo
http://mirrors.aliyun.com/gentoo
http://www.gtlib.gatech.edu/pub/gentoo
"

INSTALL_MASK="
/etc/conf.d
/etc/init.d
/etc/runlevels

/etc/cron.*

/etc/logrotate.d

/usr/share/locale

/usr/share/gtk-doc
/usr/share/help

/usr/share/man/ca
/usr/share/man/cs
/usr/share/man/da*
/usr/share/man/de*
/usr/share/man/es
/usr/share/man/fr*
/usr/share/man/hr
/usr/share/man/hu
/usr/share/man/it*
/usr/share/man/ja
/usr/share/man/ko
/usr/share/man/nl
/usr/share/man/sv
/usr/share/man/pl*
/usr/share/man/pt*
/usr/share/man/ro
/usr/share/man/ru*
/usr/share/man/sr
/usr/share/man/uk
/usr/share/man/zh*
"

PKG_INSTALL_MASK="${INSTALL_MASK}"

