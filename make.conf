#check native flags
#clang -march=native -E -v - </dev/null 2>&1|grep cc1
#gcc -march=native -E -v - </dev/null 2>&1|grep cc1

LLVM="7"
CC="/usr/lib/llvm/${LLVM}/bin/clang-7"
CXX="/usr/lib/llvm/${LLVM}/bin/clang++-7 -stdlib=libc++"
CPP="/usr/lib/llvm/${LLVM}/bin/clang-cpp"
AR="/usr/lib/llvm/${LLVM}/bin/llvm-ar"
NM="/usr/lib/llvm/${LLVM}/bin/llvm-nm"
RANLIB="/usr/lib/llvm/${LLVM}/bin/llvm-ranlib"
LD="/usr/bin/ld.lld" #LLVM lld
#LD="/usr/bin/ld.gold" #GNU Gold

#DBG: -Wall -Werror -pedantic -Wextra
#GCC: -fno-semantic-interposition -fipa-pta
#ALL: -fno-common -fno-unwind-tables -fno-asynchronous-unwind-tables
CFLAGS="-pipe -O3 -mtune=znver1 -march=znver1 -fomit-frame-pointer -flto=thin -finline-functions -ftree-vectorize"
CXXFLAGS="${CFLAGS}"
FFLAGS="${CFLAGS}"
FCFLAGS="${CFLAGS}"
LDFLAGS="${CFLAGS} -Wl,--as-needed -Wl,--discard-all -Wl,--hash-style=gnu"
########################

USE="alsa branding threads opengl glamor custom-cflags luajit ffmpeg jemalloc libedit
jit experimental expat openmp vdpau xattr pam lcms nptl pgo gpm gmp gpg ipv6 audit
git offensive ssl pcre minimal seccomp caps filecaps libcxx aio numa icu sqlite
jpeg png gif tiff X cairo curl openssl qt5 ncurses udev uuid xml usb orc
json cjk truetype egl cups vulkan
-nls -kde -exif -systemd -introspection -startup-notification -gnome -bzip2 -lz4 -lzma -zlib -zstd
-iconv -debug -static-libs -static -pch -doc -policykit -consolekit -acl -sanitize -dbus
-gdbm -idn -berkdb -vala -cxx -xinerama -readline -deprecated -fontforge -crypt -sctp
-fontconfig -pax_kernel -ldap -sasl -fortran -libnotify -inotify -gnutls -cracklib -profile
-wayland -wavpack -vorbis -sslv2 -sslv3 -smartcard -man -compat -libressl -gles1 -gles2 -hardened"

ACCEPT_KEYWORDS="~amd64"
CHOST="x86_64-pc-linux-gnu"
CPU_FLAGS_X86="aes avx avx2 f16c fma3 mmx mmxext pclmul popcnt sse sse2 sse3 sse4_1 sse4_2 sse4a ssse3"
CURL_SSL="openssl"
FFTOOLS=""
GRUB_PLATFORMS="efi-64"
INPUT_DEVICES="libinput"
L10N=""
LC_MESSAGES="C"
LLVM_TARGETS="AMDGPU BPF"
LUA_TARGETS="luajit2"
PHP_TARGETS="php7-2"
POLICY_TYPES="strict"
PYTHON_SINGLE_TARGET="python3_6"
PYTHON_TARGETS="python3_6"
QEMU_SOFTMMU_TARGETS="x86_64"
QEMU_USER_TARGETS="x86_64"
RUBY_TARGETS="ruby26"
VIDEO_CARDS="amdgpu radeonsi"

EMERGE_DEFAULT_OPTS="--nospinner --ask --verbose"
MAKEOPTS="-j33 -l33"
DISTDIR="/var/cache/distfiles"
PKGDIR="/var/cache/packages"
PORTAGE_NICENESS="15"
PORTAGE_IONICE_COMMAND="ionice -c 3 -p \${PID}"
PORTAGE_TMPDIR="/tmp"
#PORT_LOGDIR="/tmp/portage-logs"
FEATURES="cgroup collision-protect downgrade-backup fail-clean fixlafiles
ipc-sandbox network-sandbox news nodoc noinfo parallel-fetch parallel-install
preserve-libs sandbox sfperms strict strict-keepdir unknown-features-warn
unmerge-orphans userfetch userpriv usersandbox usersync"
#protect-owned stricter"
#FEATURES="${FEATURES} test test-fail-continue"
COLLISION_IGNORE=""
CLEAN_DELAY="0"
EMERGE_WARNING_DELAY="0"
ACCEPT_LICENSE="* -@EULA"
BINPKG_COMPRESS="zstd"
BINPKG_COMPRESS_FLAGS="-T0"
PORTAGE_COMPRESS="xz"
PORTAGE_COMPRESS_FLAGS=""
CONFIG_PROTECT="/etc /etc/init.d /etc/conf.d /usr/share/gnupg/qualified.txt"
CONFIG_PROTECT_MASK="/etc/sandbox.d /etc/fonts/fonts.conf /etc/gentoo-release /etc/terminfo /etc/dconf /etc/ca-certificates.conf /etc/revdep-rebuild /etc/libvirt/nwfilter"
GENTOO_MIRRORS="http://gentoo.osuosl.org http://gentoo.mirrors.easynews.com/linux/gentoo http://gentoo.mirrors.tds.net/gentoo http://mirrors.evowise.com/gentoo/ http://cosmos.illinois.edu/pub/gentoo"
INSTALL_MASK="
TODO
/usr/share/help
/usr/share/locale/*

/usr/share/man/ca
/usr/share/man/cs
/usr/share/man/de
/usr/share/man/es
/usr/share/man/fr
/usr/share/man/hu
/usr/share/man/it
/usr/share/man/ja
/usr/share/man/ko
/usr/share/man/nl
/usr/share/man/pl
/usr/share/man/pt*
/usr/share/man/ru
/usr/share/man/uk
/usr/share/man/zh_CN

/etc/systemd
/lib/systemd
/usr/lib64/portage/python2.7/install-qa-check.d/60systemd
/usr/lib64/systemd
/usr/lib/systemd
/usr/share/nvim/runtime/*/systemd.vim
/usr/share/zsh/site-contrib/fast-syntax-highlighting/images

/usr/share/gnome-control-center
/usr/share/gtk-doc
"
PKG_INSTALL_MASK="${INSTALL_MASK}"
